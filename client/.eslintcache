[{"/app/src/App.js":"1","/app/src/index.js":"2","/app/src/reportWebVitals.js":"3","/app/src/components/pages/Home.js":"4","/app/src/components/layout/Navbar.js":"5","/app/src/components/tasks/CreateTask.js":"6","/app/src/components/tasks/Task.js":"7","/app/src/components/tasks/EditTask.js":"8","/app/src/store.js":"9","/app/src/reducers/index.js":"10","/app/src/reducers/taskReducer.js":"11","/app/src/actions/types.js":"12","/app/src/actions/taskActions.js":"13","/app/src/actions/loadingManager.js":"14"},{"size":1032,"mtime":1611984947381,"results":"15","hashOfConfig":"16"},{"size":494,"mtime":1611895953248,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1611895953224,"results":"18","hashOfConfig":"16"},{"size":1584,"mtime":1611984947381,"results":"19","hashOfConfig":"16"},{"size":476,"mtime":1611984947381,"results":"20","hashOfConfig":"16"},{"size":3309,"mtime":1611984947381,"results":"21","hashOfConfig":"16"},{"size":1648,"mtime":1611985323709,"results":"22","hashOfConfig":"16"},{"size":3700,"mtime":1611985028477,"results":"23","hashOfConfig":"16"},{"size":327,"mtime":1611984947381,"results":"24","hashOfConfig":"16"},{"size":267,"mtime":1611984947381,"results":"25","hashOfConfig":"16"},{"size":663,"mtime":1611961415957,"results":"26","hashOfConfig":"16"},{"size":137,"mtime":1611945771317,"results":"27","hashOfConfig":"16"},{"size":1934,"mtime":1611984947381,"results":"28","hashOfConfig":"16"},{"size":201,"mtime":1611984947381,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"yoa3t4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/app/src/App.js",[],["63","64"],"/app/src/index.js",[],"/app/src/reportWebVitals.js",[],"/app/src/components/pages/Home.js",["65"],"import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadTasks,deleteTask } from \"../../actions/taskActions\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const tasks = useSelector((state) => state.task.tasks);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(loadTasks());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"py-4\">\r\n        <h1>Tasks</h1>\r\n        <table className=\"table border shadow\">\r\n          <thead className=\"thead-dark\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"text-center\">Title</th>\r\n              <th className=\"text-center\">Action</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {tasks.map((task, index) => (\r\n              <tr>\r\n                <td className=\"\">{task.title}</td>\r\n\r\n                <td className=\"text-center\">\r\n                  <Link className=\"btn btn-primary m-1\" to={`/tasks/${task.id}`}>\r\n                    View\r\n                  </Link>\r\n                  <Link className=\"btn btn-outline-primary m-1\" to={`/tasks/update/${task.id}`}>\r\n                    Update\r\n                  </Link>\r\n                  <Link className=\"btn btn-danger m-1\" onClick={() => dispatch(deleteTask(task.id))}>\r\n                    Delete\r\n                  </Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/app/src/components/layout/Navbar.js",[],"/app/src/components/tasks/CreateTask.js",[],"/app/src/components/tasks/Task.js",["66"],"import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loadTask, deleteTask } from \"../../actions/taskActions\";\r\n\r\nconst Task = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const task = useSelector((state) => state.task.task);\r\n  console.log(task)\r\n  useEffect(() => {\r\n    dispatch(loadTask(id));\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    <div className=\"container py-4\">\r\n      <Link className=\"btn btn-primary\" to=\"/\">\r\n        back to Home\r\n      </Link>\r\n      <h4 className=\"mt-2\">Task Title : {task.title}</h4>\r\n      <hr />\r\n    \r\n      <ul className=\"list-group w-50\">\r\n        <li className=\"list-group-item\">\r\n          {\" \"}\r\n          <span className=\"font-weight-bold\"> Id : </span>\r\n          {task.id}{\" \"}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          {\" \"}\r\n          <span className=\"font-weight-bold\"> Title : </span> {task.title}{\" \"}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          {\" \"}\r\n          <span className=\"font-weight-bold\"> Details : </span> {task.details}{\" \"}\r\n        </li>\r\n        <li className=\"list-group-item\">\r\n          {\" \"}\r\n          <span className=\"font-weight-bold\"> completed : </span> {task.completed? \"True\":\"False\"}{\" \"}\r\n        </li>\r\n      </ul>\r\n      <Link className=\"btn btn-outline-primary m-2\" to={`/tasks/update/${task.id}`}>\r\n        Update\r\n      </Link>\r\n      <Link className=\"btn btn-danger m-2\" onClick={() => dispatch(deleteTask(task.id))}>\r\n        Delete\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","/app/src/components/tasks/EditTask.js",["67","68","69"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { editTask, loadTask } from \"../../actions/taskActions\";\r\n\r\nconst EditTask = () => {\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { id } = useParams();\r\n  const [task, setTask] = useState({\r\n    title: \"\",\r\n    details: \"\",\r\n  });\r\n  const [error, setError] = useState({\r\n    title: \"\",\r\n    details: \"\",\r\n  });\r\n  const [completed, setCompleted] = useState(false);\r\n  const taskInfo = useSelector((state) => state.task.task);\r\n\r\n  const { title, details } = task;\r\n  const onInputChange = (e) => {\r\n    setTask({ ...task, [e.target.name]: e.target.value });\r\n    if (e.target.value.length > 10) {\r\n      setError({ ...error, [e.target.name]: \"\" });\r\n    } \r\n  };\r\n\r\n  const onSwitchChange = (e) => {\r\n    setCompleted(!completed);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTask({ ...task, title: taskInfo.title, details: taskInfo.details });\r\n    setCompleted(taskInfo.completed);\r\n  }, [taskInfo]);\r\n\r\n  useEffect(() => {\r\n    dispatch(loadTask(id));\r\n  }, []);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (task.title.length < 10) {\r\n      setError({ ...error, title: \"Title can not be empty\" });\r\n    }  if (task.details.length < 10) {\r\n      setError({ ...error, details: \"Details can not be empty\" });\r\n    }\r\n\r\n    if (task.title.length > 10 && task.details.length > 10) {\r\n      let taskObject = {\r\n        title: task.title,\r\n        details: task.details,\r\n        completed: completed,\r\n      };\r\n      dispatch(editTask(taskObject, id, history));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"col-md-6 col-12 mx-auto shadow m-5 p-5\">\r\n        <h2 className=\"text-center mb-4\">Update Task</h2>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className={error.title === \"\" ? \"form-control form-control-md\" : \"form-control form-control-md is-invalid\"}\r\n              placeholder=\"Update the title\"\r\n              name=\"title\"\r\n              value={title}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n            {error.title === \"\" ? null : <div className={error.title === null ? \"hidden\" : \"invalid-feedback\"}>Please enter a valid title</div>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              className={error.details === \"\" ? \"form-control form-control-md\" : \"form-control form-control-md is-invalid\"}\r\n              placeholder=\"Update the details\"\r\n              name=\"details\"\r\n              value={details}\r\n              onChange={(e) => onInputChange(e)}\r\n            />\r\n             {error.details === \"\" ? null : <div className={error.details === null ? \"hidden\" : \"invalid-feedback\"}>Please enter a valid details</div>}\r\n          </div>\r\n          <div className=\"custom-control custom-switch\">\r\n            <input\r\n              type=\"checkbox\"\r\n              class=\"custom-control-input\"\r\n              id=\"customSwitch1\"\r\n              value={completed}\r\n              name=\"completed\"\r\n              checked={completed}\r\n              onChange={(e) => onSwitchChange(e)}\r\n            />\r\n            <label className=\"custom-control-label mb-3\" for=\"customSwitch1\">\r\n              Completed? Toggle to set it true\r\n            </label>\r\n          </div>\r\n          <button className=\"btn btn-warning btn-block\">Update Task</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","/app/src/store.js",[],"/app/src/reducers/index.js",[],"/app/src/reducers/taskReducer.js",[],"/app/src/actions/types.js",[],["70","71"],"/app/src/actions/taskActions.js",[],"/app/src/actions/loadingManager.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":13,"column":6,"nodeType":"78","endLine":13,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":13,"column":6,"nodeType":"78","endLine":13,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"86","line":37,"column":6,"nodeType":"78","endLine":37,"endColumn":16,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"80","line":41,"column":6,"nodeType":"78","endLine":41,"endColumn":8,"suggestions":"88"},{"ruleId":"72","replacedBy":"89"},{"ruleId":"74","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["93"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["94"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'task'. Either include it or remove the dependency array. You can also do a functional update 'setTask(t => ...)' if you only need 'task' in the 'setTask' call.",["95"],["96"],["91"],["92"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"99","fix":"103"},"Update the dependencies array to be: [dispatch]",{"range":"104","text":"105"},"Update the dependencies array to be: [dispatch, id]",{"range":"106","text":"107"},"Update the dependencies array to be: [task, taskInfo]",{"range":"108","text":"109"},{"range":"110","text":"107"},[385,387],"[dispatch]",[443,445],"[dispatch, id]",[1117,1127],"[task, taskInfo]",[1188,1190]]